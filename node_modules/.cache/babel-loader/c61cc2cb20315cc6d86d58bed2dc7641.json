{"ast":null,"code":"var _jsxFileName = \"/Users/hannah/Desktop/github projects/type-fast2/src/App.js\";\nimport React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './fonts/Lato-Regular.ttf';\nimport './game'; // word array\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chars = [\"ㄱ\", \"ㄲ\", \"ㄴ\", \"ㄷ\", \"ㄸ\", \"ㄹ\", \"ㅁ\", \"ㅂ\", \"ㅃ\", \"ㅅ\", \"ㅆ\", \"ㅇ\", \"ㅈ\", \"ㅉ\", \"ㅊ\", \"ㅋ\", \"ㅌ\", \"ㅍ\", \"ㅎ\", \"ㅏ\", \"ㅐ\", \"ㅑ\", \"ㅒ\", \"ㅓ\", \"ㅔ\", \"ㅕ\", \"ㅖ\", \"ㅗ\", \"ㅛ\", \"ㅜ\", \"ㅠ\", \"ㅡ\", \"ㅣ\"];\nconst wordInput = document.querySelector('#word-input');\nlet level_time = 5;\nlet modeVal = 1;\nlet modeArray = chars;\n\nclass gamePage extends Component {\n  constructor(props) {\n    super(props);\n    this.timeInterval = 0;\n    this.checkInterval = 0;\n\n    this.startGame = () => {\n      level_time = 5;\n      this.setState({\n        isPlaying: true,\n        time: level_time,\n        score: 0,\n        message: \"\",\n        word: this.showWord(modeArray)\n      });\n      this.timeInterval = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.checkInterval = setInterval(() => {\n        this.checkStatus();\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      if (e.target.value === \" \" && this.state.isPlaying === false) {\n        this.startGame();\n      } else if (this.state.isPlaying) {\n        this.setState({\n          input: e.target.value\n        });\n\n        if (this.matchWords(e)) {\n          console.log(level_time);\n          this.setState({\n            time: level_time,\n            input: \"\",\n            word: this.showWord(modeArray),\n            score: this.state.score + 1\n          });\n        }\n      }\n    };\n\n    this.showWord = words => {\n      const randIndex = Math.floor(Math.random() * words.length);\n      return words[randIndex];\n    };\n\n    this.matchWords = e => {\n      let current_word = this.state.word;\n      let input = e.target.value;\n\n      if (input === current_word) {\n        let prev_score = this.state.score;\n        this.setState({\n          score: prev_score + 1\n        });\n        return true;\n      } else if (input !== current_word.slice(0, input.length)) {\n        wordInput.classList.add(\"text-danger\");\n        return false;\n      } else {\n        wordInput.classList.remove(\"text-danger\");\n        this.setState({\n          message: \"\"\n        });\n        return false;\n      }\n    };\n\n    this.countdown = () => {\n      let current_time = this.state.time;\n\n      if (current_time > 0) {\n        this.setState({\n          time: current_time - 1\n        });\n      } else if (current_time === 0) {\n        this.setState({\n          isPlaying: false\n        });\n      }\n    };\n\n    this.checkStatus = () => {\n      let playing = this.state.isPlaying;\n      let timeLeft = this.state.time;\n\n      if (!playing && timeLeft === 0) {\n        let current_score = this.state.score;\n        let highscore = this.state.highscore;\n\n        if (current_score > highscore) {\n          this.setState({\n            highscore: current_score\n          });\n        }\n\n        this.setState({\n          message: \"Game Over!\",\n          input: \"\",\n          isPlaying: false,\n          score: 0\n        });\n        clearInterval(this.timeInterval);\n        clearInterval(this.checkInterval);\n      } else if (playing && this.state.score > 0 && this.state.score % 15 === 0) {\n        if (level_time > 1) {\n          level_time -= 1;\n        }\n      }\n    };\n\n    this.toggleMode = () => {\n      modeVal *= -1;\n\n      if (modeVal == 1) {\n        modeArray == chars;\n      } else {}\n    };\n\n    this.state = {\n      input: \"\",\n      word: \"안녕\",\n      time: level_time,\n      score: 0,\n      isPlaying: false,\n      message: \"\",\n      highscore: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          class: \"p-3 mb-5 nav\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"page-text name\",\n            children: \"Type Fast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-6 mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modes\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.toggleMode();\n                },\n                children: \"character practice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"word practice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              class: \"display-2 mb-5 page-text\",\n              id: \"current-word\",\n              children: this.state.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control form-control-lg page-text word-input\",\n              placeholder: \"Start typing...\",\n              id: \"word-input\",\n              autofocus: true,\n              onChange: e => {\n                this.handleChange(e);\n              },\n              value: this.state.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              class: \"mt-3 page-text\",\n              id: \"message\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row mt-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-md-6\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  class: \"page-text\",\n                  children: [\"Time Left:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time\",\n                    children: [\" \", this.state.time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-md-6\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  class: \"page-text\",\n                  children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"score\",\n                    children: [\" \", this.state.score]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  class: \"page-text\",\n                  children: [\"High Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"highscore\",\n                    children: [\" \", this.state.highscore]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row mt-5\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-md-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    class: \"page-text\",\n                    children: \"Instructions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"page-text\",\n                    children: \"Type each word or character in the given amount of seconds to score. Your time will shrink as you continue. Press space to begin.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default gamePage;","map":{"version":3,"sources":["/Users/hannah/Desktop/github projects/type-fast2/src/App.js"],"names":["React","Component","useEffect","chars","wordInput","document","querySelector","level_time","modeVal","modeArray","gamePage","constructor","props","timeInterval","checkInterval","startGame","setState","isPlaying","time","score","message","word","showWord","setInterval","countdown","checkStatus","handleChange","e","target","value","state","input","matchWords","console","log","words","randIndex","Math","floor","random","length","current_word","prev_score","slice","classList","add","remove","current_time","playing","timeLeft","current_score","highscore","clearInterval","toggleMode","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { useEffect } from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './fonts/Lato-Regular.ttf';\nimport './game';\n\n// word array\nconst chars = [\"ㄱ\", \"ㄲ\", \"ㄴ\", \"ㄷ\", \"ㄸ\", \"ㄹ\", \"ㅁ\", \"ㅂ\", \"ㅃ\", \"ㅅ\", \"ㅆ\", \"ㅇ\", \"ㅈ\", \"ㅉ\",\n\"ㅊ\", \"ㅋ\", \"ㅌ\", \"ㅍ\", \"ㅎ\", \"ㅏ\", \"ㅐ\", \"ㅑ\", \"ㅒ\", \"ㅓ\", \"ㅔ\", \"ㅕ\", \"ㅖ\", \"ㅗ\", \"ㅛ\", \"ㅜ\", \"ㅠ\",\n\"ㅡ\", \"ㅣ\"];\nconst wordInput = document.querySelector('#word-input');\nlet level_time = 5;\nlet modeVal = 1;\nlet modeArray = chars;\n\nclass gamePage extends Component{\n  timeInterval = 0; \n  checkInterval = 0;\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      input: \"\",\n      word: \"안녕\",\n      time: level_time,\n      score: 0,\n      isPlaying: false,\n      message: \"\",\n      highscore: 0\n    };\n  }\n\n  startGame = () => {\n    level_time = 5;\n\n    this.setState({\n      isPlaying: true,\n      time: level_time,\n      score: 0,\n      message: \"\",\n      word: this.showWord(modeArray)\n    });\n    this.timeInterval = setInterval(() => {\n      this.countdown();\n    }, 1000);\n    this.checkInterval = setInterval(() => {\n      this.checkStatus();\n    }, 1000);\n  }\n\n  handleChange = (e) => {\n    if (e.target.value === \" \" && this.state.isPlaying === false){\n      this.startGame();\n    } else if (this.state.isPlaying){\n      this.setState({input: e.target.value});\n\n      if (this.matchWords(e)) {\n        console.log(level_time);\n        this.setState({\n          time: level_time,\n          input: \"\",\n          word: this.showWord(modeArray),\n          score: this.state.score + 1\n        }); \n      }\n    }\n  }\n\n  // pick and display random word\n  showWord = (words) => {\n    const randIndex = Math.floor(Math.random() * words.length);\n    return words[randIndex];\n  }\n\n  matchWords = (e) => {\n    let current_word = this.state.word;\n    let input = e.target.value;\n    \n    if (input === current_word){\n      let prev_score = this.state.score;\n      this.setState({score: prev_score + 1});\n      return true;\n    } else if (input !== current_word.slice(0, input.length)){\n      wordInput.classList.add(\"text-danger\");\n      return false;\n    } else {\n      wordInput.classList.remove(\"text-danger\");\n      this.setState({message: \"\"})\n      return false;\n    }\n  }\n\n  countdown = () => {\n    let current_time = this.state.time;\n    if (current_time > 0){\n      this.setState({time: current_time - 1});\n    } else if (current_time === 0){\n      this.setState({isPlaying: false});\n    }\n  }\n\n  checkStatus = () => {\n    let playing = this.state.isPlaying;\n    let timeLeft = this.state.time;\n    if (!playing && timeLeft === 0){\n      let current_score = this.state.score;\n      let highscore = this.state.highscore;\n      if (current_score > highscore){\n        this.setState({highscore: current_score});\n      }\n      this.setState({message: \"Game Over!\", input: \"\", isPlaying: false, score: 0});\n      clearInterval(this.timeInterval);\n      clearInterval(this.checkInterval);\n    } else if (playing && this.state.score > 0 && this.state.score % 15 === 0){\n      if (level_time > 1){\n        level_time -= 1;\n      }\n    }\n  }\n\n  toggleMode = () => {\n    modeVal *= -1;\n    if (modeVal == 1){\n      modeArray == chars;\n    } else{\n      \n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <header class=\"p-3 mb-5 nav\">\n            <h1 class=\"page-text name\">Type Fast</h1>\n          </header>\n          <div class=\"row wrapper\">\n            <div class=\"col-md-6 mx-auto\">\n              <div class=\"modes\">\n                <button onClick={() => {this.toggleMode()}}>character practice</button>\n                <button>word practice</button>\n              </div>\n              <h2 class=\"display-2 mb-5 page-text\" id=\"current-word\">{this.state.word}</h2>\n              <input type=\"text\" class=\"form-control form-control-lg page-text word-input\" placeholder=\"Start typing...\" id=\"word-input\"\n                  autofocus onChange={(e) => {this.handleChange(e)}} value={this.state.input}></input>\n              <h4 class=\"mt-3 page-text\" id=\"message\">{this.state.message}</h4>\n\n              <div class=\"row mt-5\">\n                  <div class=\"col-md-6\">\n                      <h3 class=\"page-text\">Time Left:\n                          <span id=\"time\"> {this.state.time}</span>\n                      </h3>\n                  </div>\n                  <div class=\"col-md-6\">\n                      <h3 class=\"page-text\">Score:\n                          <span id=\"score\"> {this.state.score}</span>\n                      </h3>\n                  </div>\n                  <div class=\"col\">\n                      <h3 class=\"page-text\">High Score:\n                          <span id=\"highscore\"> {this.state.highscore}</span>\n                      </h3>\n                  </div>\n              </div>\n\n              <div class=\"row mt-5\">\n                  <div class=\"col-md-12\">\n                      <div class=\"card-body\">\n                          <h5 class=\"page-text\">Instructions</h5>\n                          <p class=\"page-text\">Type each word or character in the given amount of seconds to score.\n                              Your time will shrink as you continue. Press space to begin.\n                          </p>\n                      </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default gamePage;\n"]},"metadata":{},"sourceType":"module"}